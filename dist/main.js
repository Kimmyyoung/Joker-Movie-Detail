(()=>{var e={556:(e,n,t)=>{"use strict";t.d(n,{Z:()=>h});var s=t(81),a=t.n(s),o=t(645),r=t.n(o),c=t(667),i=t.n(c),l=new URL(t(500),t.b),u=new URL(t(144),t.b),d=new URL(t(423),t.b),f=r()(a()),m=i()(l),g=i()(u),p=i()(d);f.push([e.id,"@charset 'utf-8';\n@font-face {\n    font-family: 'Facon';\n    src: url("+m+") format('truetype');\n}\n\n@font-face {\n    font-family: 'Grave';\n    src: url("+g+") format('truetype');\n}\n\n@font-face {\n    font-family: 'Akira';\n    src: url("+p+") format('truetype');\n}\n\nhtml {\n\tfont-family: 'Apple SD Gothic Neo', Roboto, 'Noto Sans KR', NanumGothic, 'Malgun Gothic', sans-serif;\n\tline-height: 1.2;\n\tword-wrap: break-word;\n}\nbody {\n\t-webkit-font-smoothing: antialiased;\n}\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n}\narticle, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\ndiv, span, article, section, header, footer, aside, p, ul, li, fieldset, legend, label, a, nav, form {\n\tbox-sizing: border-box;\n}\nol, ul, li {\n\tlist-style: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\nimg {\n\tmax-width: 100%;\n\theight: auto;\n\tborder: 0;\n}\nbutton {\n\tborder: 0;\n\tbackground: transparent;\n\tcursor: pointer;\n}\n\nhtml {\n\tfont-family: 'Noto Sans KR', sans-serif;\n\tfont-size: 14px;\n}\nbody {\n\toverflow-x: hidden;\n\tcolor: rgb(29, 29, 31);\n\tletter-spacing: -0.05em;\n\tbackground: white;\n}\np {\n\tline-height: 1.6;\n}\na {\n\tcolor: rgb(29, 29, 31);\n\ttext-decoration: none;\n}\n\nbody.before-load {\n\toverflow: hidden;\n\t/* contents가 화면 밖으로 넘치면 hidden 처리하기 */\n}\n.container {\n\t/* iPhone 가로 스크롤 방지 */\n\toverflow-x: hidden;\n}\n.global-nav {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tz-index: 10;\n\twidth: 100%;\n\theight: 44px;\n\tpadding: 0 1rem;\n}\n.local-nav {\n\tposition: absolute;\n\ttop: 45px;\n\tleft: 0;\n\tz-index: 11;\n\twidth: 100%;\n\theight: 52px;\n\tpadding: 0 1rem;\n\tborder-bottom: 1px solid #ddd;\n}\n.local-nav-sticky .local-nav {\n\tposition: fixed;\n\ttop: 0;\n\tbackground: rgba(255, 255, 255, 0.1);\n\t/* for iPhone */\n\t-webkit-backdrop-filter: saturate(180%) blur(15px);\n\t-moz-backdrop-filter: saturate(180%) blur(15px);\n\t-o-backdrop-filter: saturate(180%) blur(15px);\n\tbackdrop-filter: saturate(180%) blur(15px);\n}\n.global-nav-links,\n.local-nav-links {\n\tdisplay: flex;\n\talign-items: center;\n\tmax-width: 1000px;\n\theight: 100%;\n\tletter-spacing: 2px;\n\tmargin: 0 auto;\n}\n.global-nav-links {\n\tjustify-content: space-between;\n}\n.global-nav-links a {\n\tcolor: white;\n}\n.local-nav-links .product-name {\n\tmargin-right: auto;\n\tfont-size: 1.4rem;\n\tfont-weight: bold;\n}\n.local-nav-links a {\n\tfont-size: 0.8rem;\n\tcolor: white;\n}\n.local-nav-links a:not(.product-name) {\n\tmargin-left: 2em;\n}\n.scroll-section {\n\tposition: relative;\n\tpadding-top: 50vh;\n\tbackground-color: black;\n}\n\n.ribbon-path {\n\ttop: 80%;\n\tmin-width: 850px;\n\ttransform: translate(-2%, -60%);\n\tz-index: 20;\n}\n.ribbon-path path {\n\tfill: none;\n\tstroke: #DDDDDD;\n\tstroke-width: 55;\n\tstroke-linecap: round;\n\tstroke-linejoin: round;\n\tstroke-dasharray: 1401, 1401;\n\tstroke-dashoffset: 1401;\n\topacity: 0.5;\n}\n\n#scroll-section-0 h1 {\n    font-family: 'Akira' !important;\n\tcolor: white;\n\tposition: relative;\n\ttop: -10vh;\n\tz-index: 5;\n\tfont-size: 4rem;\n\ttext-align: center;\n}\n.main-message {\n\tfont-family: 'Akira' !important;\n\tcolor: white;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\ttop: 35vh;\n\tmargin: 5px 0;\n\theight: 3em;\n\tfont-size: 4rem;\n\topacity: 0;\n\tz-index: 21;\n}\n.main-message p {\n\tfont-weight: bold;\n\ttext-align: center;\n\tline-height: 1.2;\n}\n.main-message small {\n\tdisplay: block;\n\tmargin-bottom: 0.5em;\n\tfont-size: 1.2rem;\n}\n#scroll-section-2 .main-message {\n\tfont-size: 3.5rem;\n}\n.description {\n\tmax-width: 1000px;\n\tmargin: 0 auto;\n\tpadding: 0 1rem;\n\tfont-size: 1.2rem;\n\tcolor: #888;\n}\n.description strong {\n\tfloat: left;\n\tmargin-right: 0.2em;\n\tfont-size: 3rem;\n\tcolor: white;\n}\n.sticky-elem .desc-message {\n\twidth: 45%;\n\tfont-weight: bold;\n\topacity: 0;\n\tcolor: white;\n}\n.pin {\n\twidth: 1px;\n\theight: 100px;\n\tbackground: #888;\n}\n#scroll-section-2 .b {\n\ttop: 10%;\n\tleft: 40%;\n\tcolor: #888;\n\n}\n#scroll-section-2 .c {\n\ttop: 15%;\n\tleft: 45%;\n\tcolor: #888;\n}\n.mid-message {\n\tfont-family: 'Akira';;\n\tmax-width: 1000px;\n\tmargin: 0 auto;\n\tpadding: 0 1rem;\n\tfont-size: 2rem;\n\tline-height: 5rem;\n\tcolor: #888;\n}\n.mid-message strong {\n\tcolor: rgb(29, 29, 31);\n\tfont-size: 3rem;\n}\n.canvas-caption {\n\tmax-width: 1000px;\n\tmargin: -24rem auto 0;\n\tpadding: 0 1rem;\n\tfont-size: 1.2rem;\n\tcolor: #888;\n}\n.footer {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\theight: 7rem;\n\tcolor: white;\n\tbackground: #3C4048;\n\tletter-spacing: 0.1rem;\n}\n\n.sticky-elem {\n\tdisplay: none;\n\tposition: fixed;\n\tleft: 0;\n\twidth: 100%;\n}\n\n\n#show-scene-0 #scroll-section-0 .sticky-elem,\n#show-scene-1 #scroll-section-1 .sticky-elem,\n#show-scene-2 #scroll-section-2 .sticky-elem,\n#show-scene-3 #scroll-section-3 .sticky-elem {\n\tdisplay: block;\n\twill-change: transform, opacity;\n}\n.scroll-effect-end .sticky-elem {\n\t/* 스크롤 효과가 모두 끝나고, 아래 일반 콘텐츠 영역에서는 sticky-elem들을 모두 안보이도록 */\n\tdisplay: none !important;\n}\n.sticky-elem-canvas {\n\ttop: 0;\n\theight: 105%;\n}\n.sticky-elem-canvas canvas {\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n}\n#scroll-section-3 {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\t/* scene번째 canvas 가 fit 되게 */\n}\n.image-blend-canvas.sticky {\n\tposition: fixed;\n\ttop: 0;\n\tz-index: 10;\n}\n.loading {\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\tposition: fixed;\n\ttop: 0;\n\tright: 0;\n\tbottom: 0;\n\tleft: 0;\n\tz-index: 100;\n\tbackground: white;\n\topacity: 0;\t\n\ttransition: 0.5s;\n}\n.before-load .container {\n    display: none;\n}\n.before-load .loading {\n\topacity: 1;\n}\n@keyframes loading-spin {\n\t100% { transform: rotate(360deg); }\n}\n@keyframes loading-circle-ani {\n\t0% { stroke-dashoffset: 157; }\n\t75% { stroke-dashoffset: -147; }\n\t100% { stroke-dashoffset: -157; }\n}\n.loading-circle {\n\twidth: 54px;\n\theight: 54px;\n\tanimation: loading-spin 1s infinite;\n}\n.loading-circle circle {\n\tstroke: black;\n\tstroke-width: 4;\n\t/* getTotalLength()로 stroke의 길이를 얻어올 수 있음 */\n\tstroke-dasharray: 157, 157;\n\tstroke-dashoffset: 0;\n\tfill: transparent;\n\tanimation: loading-circle-ani 1s infinite;\n\t/* transition: 1s; */\n}\n/* .loading-circle:hover circle {\n\tstroke-dashoffset: -157;\n} */\n\n.normal-content {\n\tmargin-bottom: 10rem;\n}\n\n@media (min-width: 1024px) {\n\t#scroll-section-0 h1 {\n\t\tfont-size: 9vw;\n\t}\n\t.main-message {\n\t\tfont-size: 4vw;\n\t}\n\t.description {\n\t\tpadding: 0;\n\t\tfont-size: 2rem;\n\t}\n\t.description strong {\n\t\tfont-size: 6rem;\n\t}\n\t#scroll-section-2 .main-message {\n\t\tfont-size: 6vw;\n\t}\n\t.main-message small {\n\t\tfont-size: 1.5vw;\n\t}\n\t.sticky-elem.desc-message {\n\t\twidth: 20%;\n\t}\n\t#scroll-section-2 .b {\n\t\ttop: 20%;\n\t\tleft: 53%;\n\t}\n\t#scroll-section-2 .c {\n\t\tleft: 55%;\n\t}\n\t.mid-message {\n\t\twidth: 1000px;\n\t\tpadding: 0;\n\t\tfont-size: 4vw;\n\t}\n\t.canvas-caption {\n\t\tmargin-top: -8rem;\n\t\tpadding: 0;\n\t\tfont-size: 2rem;\n\t}\n}\n",""]);const h=f},645:e=>{"use strict";e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",s=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),s&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),s&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,s,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var r={};if(s)for(var c=0;c<this.length;c++){var i=this[c][0];null!=i&&(r[i]=!0)}for(var l=0;l<e.length;l++){var u=[].concat(e[l]);s&&r[u[0]]||(void 0!==o&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=o),t&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=t):u[2]=t),a&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=a):u[4]="".concat(a)),n.push(u))}},n}},667:e=>{"use strict";e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},81:e=>{"use strict";e.exports=function(e){return e[1]}},957:e=>{e.exports="\n(()=>{\n    let yOffset=0;\n    let prevScrollHeight=0; //현재 스크롤의 합 보다 이전에 위치한 스크롤 섹션의 높이의 합\n    let currentScene = 0; //현재 활성화된 신 값\n    let enterNewScene = false; //scene 이 변경되는 찰나의 순간\n    let acc = 0.1;\n    let delayedYOffset = 0;\n    let rafId;\n    let rafState;\n\n    const sceneInfo = [\n        {\n            //0\n            type: 'sticky',\n            heightNum : 5, \n            //browser height * 5\n            scrollHeight: 0,\n            objs: {\n                container: document.querySelector('#scroll-section-0'),\n                messageA: document.querySelector('#scroll-section-0 .main-message.a'),\n\t\t\t\tmessageB: document.querySelector('#scroll-section-0 .main-message.b'),\n\t\t\t\tmessageC: document.querySelector('#scroll-section-0 .main-message.c'),\n\t\t\t\tmessageD: document.querySelector('#scroll-section-0 .main-message.d'),\n                canvas: document.querySelector('#video-canvas-0'),\n                context: document.querySelector('#video-canvas-0').getContext('2d'),\n                videoImages:[],\n                ribbonPath: document.querySelector('.ribbon-path path')\n                //수천장의 이미지들을 여기에 넣을 예정 \n            },\n            values: {\n\t\t\t\tvideoImageCount: 400,\n\t\t\t\timageSequence: [0, 399],\n                //폴더 001 (스크린 0에 사용될 이미지의 갯수)\n\t\t\t\tcanvas_opacity: [1, 0, { start: 0.9, end: 1 }],\n\t\t\t\tmessageA_opacity_in: [0, 1, { start: 0.1, end: 0.2 }],\n\t\t\t\tmessageB_opacity_in: [0, 1, { start: 0.3, end: 0.4 }],\n\t\t\t\tmessageC_opacity_in: [0, 1, { start: 0.5, end: 0.6 }],\n\t\t\t\tmessageD_opacity_in: [0, 1, { start: 0.7, end: 0.8 }],\n\t\t\t\tmessageA_translateY_in: [20, 0, { start: 0.1, end: 0.2 }],\n\t\t\t\tmessageB_translateY_in: [20, 0, { start: 0.3, end: 0.4 }],\n\t\t\t\tmessageC_translateY_in: [20, 0, { start: 0.5, end: 0.6 }],\n\t\t\t\tmessageD_translateY_in: [20, 0, { start: 0.7, end: 0.8 }],\n\t\t\t\tmessageA_opacity_out: [1, 0, { start: 0.25, end: 0.3 }],\n\t\t\t\tmessageB_opacity_out: [1, 0, { start: 0.45, end: 0.5 }],\n\t\t\t\tmessageC_opacity_out: [1, 0, { start: 0.65, end: 0.7 }],\n\t\t\t\tmessageD_opacity_out: [1, 0, { start: 0.85, end: 0.9 }],\n\t\t\t\tmessageA_translateY_out: [0, -20, { start: 0.25, end: 0.3 }],\n\t\t\t\tmessageB_translateY_out: [0, -20, { start: 0.45, end: 0.5 }],\n\t\t\t\tmessageC_translateY_out: [0, -20, { start: 0.65, end: 0.7 }],\n\t\t\t\tmessageD_translateY_out: [0, -20, { start: 0.85, end: 0.9 }],\n                path_dashoffset_in: [1401, 0, { start: 0.2, end: 0.4 }],\n\t\t\t\tpath_dashoffset_out: [0, -1401, { start: 0.6, end: 0.8 }],\n\t\t\t}\n        },\n        {\n            //1\n            type: 'normal',\n            heightNum : 5,\n            scrollHeight: 0,\n            objs: {\n                container: document.querySelector('#scroll-section-1')\n            }\n        },\n        {\n            //2\n            type: 'sticky',\n            heightNum : 5,\n            scrollHeight: 0,\n            objs: {\n                container: document.querySelector('#scroll-section-2'),\n                messageA: document.querySelector('#scroll-section-2 .a'),\n                messageB: document.querySelector('#scroll-section-2 .b'),\n                messageC: document.querySelector('#scroll-section-2 .c'),\n                pinB: document.querySelector('#scroll-section-2 .b .pin'),\n                pinC: document.querySelector('#scroll-section-2 .c .pin'),\n                //pin : scaleY 속성으로 세로로 된 작대기를 구현함\n                canvas: document.querySelector('#video-canvas-1'),\n                context: document.querySelector('#video-canvas-1').getContext('2d'),\n                videoImages:[]\n            },\n            values: {\n                videoImageCount: 790,\n                // videoImageCount: 960,\n\t\t\t\timageSequence: [0, 789],\n                //폴더 001 (스크린 0에 사용될 이미지의 갯수)\n\t\t\t\tcanvas_opacity_in: [0, 1, { start: 0, end: 0.1 }],\n                canvas_opacity_out: [1, 0, { start: 0.95, end: 1 }],\n                messageA_translateY_in: [20, 0, { start: 0.15, end: 0.2 }],\n                messageB_translateY_in: [30, 0, { start: 0.5, end: 0.55 }],\n                messageC_translateY_in: [30, 0, { start: 0.72, end: 0.77 }],\n                messageA_opacity_in: [0, 1, { start: 0.15, end: 0.2 }],\n                messageB_opacity_in: [0, 1, { start: 0.5, end: 0.55 }],\n                messageC_opacity_in: [0, 1, { start: 0.72, end: 0.77 }],\n                messageA_translateY_out: [0, -20, { start: 0.3, end: 0.35 }],\n                messageB_translateY_out: [0, -20, { start: 0.58, end: 0.63 }],\n                messageC_translateY_out: [0, -20, { start: 0.85, end: 0.9 }],\n                messageA_opacity_out: [1, 0, { start: 0.3, end: 0.35 }],\n                messageB_opacity_out: [1, 0, { start: 0.58, end: 0.63 }],\n                messageC_opacity_out: [1, 0, { start: 0.85, end: 0.9 }],\n                pinB_scaleY: [0.5, 1, { start: 0.5, end: 0.55 }],\n                pinC_scaleY: [0.5, 1, { start: 0.72, end: 0.77 }],\n                pinB_opacity_in: [0, 1, { start: 0.5, end: 0.55 }],\n                pinC_opacity_in: [0, 1, { start: 0.72, end: 0.77 }],\n                pinB_opacity_out: [1, 0, { start: 0.58, end: 0.63 }],\n                pinC_opacity_out: [1, 0, { start: 0.85, end: 0.9 }],\n                rect1X : [ 0, 0, {start: 0, end: 0}],\n                rect2X : [ 0, 0, {start: 0 , end: 0}],\n            }\n        },\n        {\n                //3\n                type: 'sticky',\n                heightNum: 5,\n                scrollHeight: 0,\n                objs: {\n                    container: document.querySelector('#scroll-section-3'),\n                    canvasCaption: document.querySelector('.canvas-caption'),\n                    canvas: document.querySelector('.image-blend-canvas'),\n                    context: document.querySelector('.image-blend-canvas').getContext('2d'),\n                    imagesPath: [\n                        '../images/blend-image-1.jpg',\n                        '../images/blend-image-2.jpg'\n                    ],\n                    images: []\n                },\n                values: {\n                    rect1X : [ 0, 0, {start: 0, end: 0}],\n                    rect2X : [ 0, 0, {start: 0 , end: 0}],\n                    rectStartY : 0,\n                    blendHeight : [0, 0, {start :0, end : 0}],\n                    canvas_Scale : [0, 0, {start: 0, end : 0}],\n                    canvasCaption_Opacity : [ 0, 1, {start: 0, end: 0}],\n                    canvasCaption_TranslateY : [ 20, 0, {start: 0, end: 0}]\n                }\n        },\n    ];\n\n    function setCanvasImages(){\n        let imgElem;\n\n        for(let i=0; i<sceneInfo[0].values.videoImageCount; i++) {\n            imgElem = new Image();\n            imgElem.src = `../video/003/IMG_${6710+i}.jpg`;\n            sceneInfo[0].objs.videoImages.push(imgElem);\n        }\n\n        let imgElem2;\n\n        for(let i=0; i<sceneInfo[2].values.videoImageCount; i++) {\n            imgElem2 = new Image();\n            imgElem2.src = `../video/004/IMG_${7027+i}.JPG`;\n            sceneInfo[2].objs.videoImages.push(imgElem2);\n        }\n        \n        let imgElem3;\n\n        for(let i=0; i < sceneInfo[3].objs.imagesPath.length; i++) {\n            imgElem3 = new Image();\n            imgElem3.src = sceneInfo[3].objs.imagesPath[i];\n            sceneInfo[3].objs.images.push(imgElem3);\n        }\n\n    }\n    function checkMenu(){\n        //window.pageyoffset 현재 스크롤 된 위치 = yoffset\n        if (yOffset > 44) {\n            document.body.classList.add('local-nav-sticky');\n        } else {\n            document.body.classList.remove('local-nav-sticky');\n        }\n    }\n    function setLayout () {\n        //Define scrollheight \n       for(let i=0; i < sceneInfo.length; i++){\n        if(sceneInfo[i].type === 'sticky') {\n            sceneInfo[i].scrollHeight = sceneInfo[i].heightNum * window.innerHeight;\n        }else if(sceneInfo[i].type === 'normal'){\n            sceneInfo[i].scrollHeight = sceneInfo[i].objs.container.offsetHeight;\n        }\n        sceneInfo[i].objs.container.style.height = `${sceneInfo[i].scrollHeight}px`;           \n       }\n       //새로고침 했을 때 끊기지 않도록 작동하게 \n       yOffset = window.pageYOffset;\n\n       let totalScrollHeight = 0;\n       for(let i=0; i < sceneInfo.length; i++) {\n           totalScrollHeight += sceneInfo[i].scrollHeight;\n           if(totalScrollHeight >= yOffset) {\n               currentScene = i;\n               break;\n           }\n       }\n\n       document.body.setAttribute('id', `show-scene-${currentScene}`);\n       \n       const heightRatio = window.innerHeight / 1080;\n       sceneInfo[0].objs.canvas.style.transform = `translate3d(-50%, -50%, 0) scale(${heightRatio})`;\n       sceneInfo[2].objs.canvas.style.transform = `translate3d(-50%, -50%, 0) scale(${heightRatio})`;\n    }\n\n    function calcValues(values, currentYOffset) {\n        //currentYoffset : 현재 스크롤의 위치 \n        let rv;\n        const scrollHeight = sceneInfo[currentScene].scrollHeight\n        //현재 씬의 높이\n        const scrollRatio = currentYOffset / scrollHeight;\n        //현재 씬에서 스크롤이 된 범위와의 비율 구하기\n        \n        if(values.length === 3) {\n            let partScrollStart = values[2].start * scrollHeight;\n            let partScrollEnd = values[2].end * scrollHeight;\n            let partScrollHeight = partScrollEnd - partScrollStart;\n\n            if(currentYOffset >= partScrollStart && currentYOffset <= partScrollEnd) {\n                rv = (currentYOffset - partScrollStart) / partScrollHeight * (values[1] - values[0]) + values[0];\n            }else if(currentYOffset < partScrollStart) {\n                rv = values[0];\n            }else if(currentYOffset > partScrollEnd) {\n                rv = values[1];\n            }\n        }else {\n            rv = scrollRatio * (values[1] - values[0]) + values[0];\n        }\n        return rv;\n    }\n\n    function playAnimation() {\n        const objs = sceneInfo[currentScene].objs;\n        const values = sceneInfo[currentScene].values;\n        const currentYOffset = yOffset - prevScrollHeight;\n        //currentYOffset: 현재 스크린의 위치\n        // yOffset : 전체 스크린의 Height \n        const scrollHeight = sceneInfo[currentScene].scrollHeight;\n        const scrollRatio = currentYOffset / scrollHeight;\n        \n        switch (currentScene) {\n            case 0:\n                // const messageA_opacity_in = calcValues(values.messageA_opacity_in, currentY0ffset);\n                // const messageA_translateY_in = calcValues(values.messageA_translateY_in, currentY0ffset);\n                // const messageA_opacity_out = calcValues(values.messageA_opacity_out, currentY0ffset);\n                // const messageA_translateY_out = calcValues(values.messageA_translateY_out, currentY0ffset);\n                // let sequence = Math.round(calcValues(values.imageSequence, currentYOffset));\n                // objs.context.drawImage(objs.videoImages[sequence],0,0);\n                objs.canvas.style.opacity = calcValues(values.canvas_opacity, currentYOffset);\n\n                if (scrollRatio <= 0.22) {\n                    // in\n                    objs.ribbonPath.style.strokeDashoffset = calcValues(values.path_dashoffset_in, currentYOffset);\n                    objs.messageA.style.opacity = calcValues(values.messageA_opacity_in, currentYOffset);\n                    objs.messageA.style.transform = `translate3d(0, ${calcValues(values.messageA_translateY_in, currentYOffset)}%, 0)`;\n                    //translate3d : (x,y,z) => 속성으로 xyz 를 다 컨트롤 할 수 있고, 3d 가 붙은 속성들은 하드웨어 가속이 보장되어 \n                    // 퍼포먼스가 좋기 때문에 translateY (y만 컨트롤 하기때문에) 이걸 사용할 순 있지만 퍼포먼스가 좋은 translate3d를 사용한다.\n                } else {\n                    // out\n                    objs.ribbonPath.style.strokeDashoffset = calcValues(values.path_dashoffset_out, currentYOffset);\n                    objs.messageA.style.opacity = calcValues(values.messageA_opacity_out, currentYOffset);\n                    objs.messageA.style.transform = `translate3d(0, ${calcValues(values.messageA_translateY_out, currentYOffset)}%, 0)`;\n                }\n    \n                if (scrollRatio <= 0.42) {\n                    // in\n                    objs.messageB.style.opacity = calcValues(values.messageB_opacity_in, currentYOffset);\n                    objs.messageB.style.transform = `translate3d(0, ${calcValues(values.messageB_translateY_in, currentYOffset)}%, 0)`;\n                } else {\n                    // out\n                    objs.messageB.style.opacity = calcValues(values.messageB_opacity_out, currentYOffset);\n                    objs.messageB.style.transform = `translate3d(0, ${calcValues(values.messageB_translateY_out, currentYOffset)}%, 0)`;\n                }\n    \n                if (scrollRatio <= 0.62) {\n                    // in\n                    objs.messageC.style.opacity = calcValues(values.messageC_opacity_in, currentYOffset);\n                    objs.messageC.style.transform = `translate3d(0, ${calcValues(values.messageC_translateY_in, currentYOffset)}%, 0)`;\n                } else {\n                    // out\n                    objs.messageC.style.opacity = calcValues(values.messageC_opacity_out, currentYOffset);\n                    objs.messageC.style.transform = `translate3d(0, ${calcValues(values.messageC_translateY_out, currentYOffset)}%, 0)`;\n                }\n    \n                if (scrollRatio <= 0.82) {\n                    // in\n                    objs.messageD.style.opacity = calcValues(values.messageD_opacity_in, currentYOffset);\n                    objs.messageD.style.transform = `translate3d(0, ${calcValues(values.messageD_translateY_in, currentYOffset)}%, 0)`;\n                } else {\n                    // out\n                    objs.messageD.style.opacity = calcValues(values.messageD_opacity_out, currentYOffset);\n                    objs.messageD.style.transform = `translate3d(0, ${calcValues(values.messageD_translateY_out, currentYOffset)}%, 0)`;\n                }\n\n          \n\n                break;\n\n            case 1:\n                break;\n            case 2:\n                // let sequence2 = Math.round(calcValues(values.imageSequence, currentYOffset));\n                // objs.context.drawImage(objs.videoImages[sequence2],0,0);\n\n                if(scrollRatio <= 0.5) {\n                    //in\n                    objs.canvas.style.opacity = calcValues(values.canvas_opacity_in, currentYOffset);\n                }else{\n                    //out\n                    objs.canvas.style.opacity = calcValues(values.canvas_opacity_out, currentYOffset);\n                }\n\n                if (scrollRatio <= 0.25) {\n                    // in\n                    objs.messageA.style.opacity = calcValues(values.messageA_opacity_in, currentYOffset);\n                    objs.messageA.style.transform = `translate3d(0, ${calcValues(values.messageA_translateY_in, currentYOffset)}%, 0)`;\n                } else {\n                    // out\n                    objs.messageA.style.opacity = calcValues(values.messageA_opacity_out, currentYOffset);\n                    objs.messageA.style.transform = `translate3d(0, ${calcValues(values.messageA_translateY_out, currentYOffset)}%, 0)`;\n                }\n\n                if (scrollRatio <= 0.57) {\n                    // in\n                    objs.messageB.style.transform = `translate3d(0, ${calcValues(values.messageB_translateY_in, currentYOffset)}%, 0)`;\n                    objs.messageB.style.opacity = calcValues(values.messageB_opacity_in, currentYOffset);\n                    objs.pinB.style.transform = `scaleY(${calcValues(values.pinB_scaleY, currentYOffset)})`;\n                } else {\n                    // out\n                    objs.messageB.style.transform = `translate3d(0, ${calcValues(values.messageB_translateY_out, currentYOffset)}%, 0)`;\n                    objs.messageB.style.opacity = calcValues(values.messageB_opacity_out, currentYOffset);\n                    objs.pinB.style.transform = `scaleY(${calcValues(values.pinB_scaleY, currentYOffset)})`;\n                }\n\n                if (scrollRatio <= 0.83) {\n                    // in\n                    objs.messageC.style.transform = `translate3d(0, ${calcValues(values.messageC_translateY_in, currentYOffset)}%, 0)`;\n                    objs.messageC.style.opacity = calcValues(values.messageC_opacity_in, currentYOffset);\n                    objs.pinC.style.transform = `scaleY(${calcValues(values.pinC_scaleY, currentYOffset)})`;\n                } else {\n                    // out\n                    objs.messageC.style.transform = `translate3d(0, ${calcValues(values.messageC_translateY_out, currentYOffset)}%, 0)`;\n                    objs.messageC.style.opacity = calcValues(values.messageC_opacity_out, currentYOffset);\n                    objs.pinC.style.transform = `scaleY(${calcValues(values.pinC_scaleY, currentYOffset)})`;\n                }\n\n                //currentScene에서 캔버스 미리 그리기 처리 (약간 부자연스러운 부분 error 처리)\n                if(scrollRatio > 0.9) {\n                    const objs = sceneInfo[3].objs;\n                    const widthRatio = window.innerWidth / objs.canvas.width;\n                    const heightRatio = window.innerHeight / objs.canvas.height;\n                    let canvasScaleRatio;\n                    // const, let 으로 선언한 변수는 해당 중괄호 안에서만 사용 가능\n\n                    if(widthRatio <= heightRatio) {\n                        canvasScaleRatio = heightRatio;\n                    }else{\n                        canvasScaleRatio = widthRatio;\n                    }\n                    \n                    objs.canvas.style.transform = `scale(${canvasScaleRatio})`;\n                    objs.context.fillStyle = 'black';\n                    objs.context.drawImage(objs.images[0],0,0);\n    \n                    const recalculatedInnerWidth = document.body.offsetWidth / canvasScaleRatio;\n                    const recalculatedInnerHeight = window.innerHeight / canvasScaleRatio;\n                    \n                    const BlackRectWidth = recalculatedInnerWidth * 0.25;\n\n                    values.rect1X[0] = ((objs.canvas.width - recalculatedInnerWidth) / 2);\n                    console.log(values.rect1X[0]);\n                    values.rect1X[1] = values.rect1X[0] - BlackRectWidth;\n                    values.rect2X[0] = values.rect1X[0] + recalculatedInnerWidth - BlackRectWidth;\n                    values.rect2X[1] = values.rect2X[0] + BlackRectWidth;\n    \n\n                    \n                    //좌우 흰색 박스 그리기\n                    objs.context.fillRect(values.rect1X[0], 0, parseInt(BlackRectWidth), objs.canvas.height);\n                    objs.context.fillRect(values.rect2X[0], 0, parseInt(BlackRectWidth), objs.canvas.height);\n\n                }\n\n\n\n                break;\n            case 3:\n                //디바이스마다 다른 스크린 속에서 가로세로 이미지가 꽉 채우게 하기 위해 비율을 구해야한다.\n                const widthRatio = window.innerWidth / objs.canvas.width;\n                const heightRatio = window.innerHeight / objs.canvas.height;\n                let canvasScaleRatio;\n                let step = 0; \n\n                if(widthRatio <= heightRatio) {\n                    canvasScaleRatio = heightRatio;\n                }else{\n                    canvasScaleRatio = widthRatio;\n                }\n                \n                \n                objs.canvas.style.transform = `scale(${canvasScaleRatio})`;\n                objs.context.fillStyle = 'black';\n                //색상을 흰색으로 변경 (rect 부분)\n\n\n                const recalculatedInnerWidth = document.body.offsetWidth / canvasScaleRatio;\n                const recalculatedInnerHeight = window.innerHeight / canvasScaleRatio;\n                \n                if(!values.rectStartY) {\n                    // values.rectStartY = objs.canvas.getBoundingClientRect().top;\n                    values.rectStartY = objs.canvas.offsetTop + (objs.canvas.height - objs.canvas.height * canvasScaleRatio) /2 ;\n                    //이미지를 scale 처리 했기 때문에 scale 해서 작게 한 만큼을 더해주어야한다.\n                    values.rect1X[2].start = (window.innerHeight / 2) / scrollHeight; \n                    values.rect2X[2].start = (window.innerHeight / 2) / scrollHeight; \n\n                    values.rect1X[2].end = values.rectStartY / scrollHeight;\n                    values.rect2X[2].end = values.rectStartY / scrollHeight;\n                }\n                \n                objs.context.drawImage(objs.images[0],0,0);\n\n                const whiteRectWidth = recalculatedInnerWidth * 0.25;\n\t\t\t\tvalues.rect1X[0] = (objs.canvas.width - recalculatedInnerWidth) / 2;\n\t\t\t\tvalues.rect1X[1] = values.rect1X[0] - whiteRectWidth;\n\t\t\t\tvalues.rect2X[0] = values.rect1X[0] + recalculatedInnerWidth - whiteRectWidth;\n\t\t\t\tvalues.rect2X[1] = values.rect2X[0] + whiteRectWidth;\n\n\t\t\t\t// // 좌우 흰색 박스 그리기\n\t\t\t\t// objs.context.fillRect(values.rect1X[0], 0, parseInt(whiteRectWidth),objs.canvas.height);\n                // objs.context.fillRect(values.rect2X[0], 0, parseInt(whiteRectWidth),objs.canvas.height);\n\n                objs.context.fillRect(parseInt(calcValues(values.rect1X, currentYOffset)),0,parseInt(whiteRectWidth),objs.canvas.height);\n                objs.context.fillRect(parseInt(calcValues(values.rect2X, currentYOffset)),0,parseInt(whiteRectWidth),objs.canvas.height);\n\n                // if(캔버스가 브라우저 상단에 닿지 않았다면) {\n                //     step 1 \n                // }else if(캔버스가 브라우저 상단에 닿았다면) {\n                //     step 2\n                //     if(step 3)\n                // }\n\n\n                if(scrollRatio < values.rect1X[2].end){\n                    step = 1;\n                    objs.canvas.classList.remove('sticky');\n                }else {\n                    step = 2;\n                    //imageBlendY : [0, 0, {start :0, end : 0}]\n                    values.blendHeight[0] = 0;\n                    values.blendHeight[1] = objs.canvas.height;\n                    values.blendHeight[2].start = values.rect1X[2].end;\n                    //이전이미지의 끝점이 이 새로운 이미지 (블렌딩 될)의 시작점 이기 때문에\n                    values.blendHeight[2].end = values.blendHeight[2].start + 0.2; \n                    const blendHeight = calcValues(values.blendHeight, currentYOffset);\n                    \n                    objs.context.drawImage(objs.images[1], \n                        0, objs.canvas.height - blendHeight, objs.canvas.width, blendHeight,\n                        0, objs.canvas.height - blendHeight, objs.canvas.width, blendHeight,\n                    );\n\n                    objs.canvas.classList.add('sticky');\n                    objs.canvas.style.top = `${-(objs.canvas.height - objs.canvas.height * canvasScaleRatio) /2}px`;\n                    \n                    if(scrollRatio > values.blendHeight[2].end) {\n                        values.canvas_Scale[0] = canvasScaleRatio;\n                        values.canvas_Scale[1] = document.body.offsetWidth / ( 1.5 * objs.canvas.width);\n                        // 스마트 폰이든 여러 디스플레이에 맞게 폭이 작아져야하기때문에\n                        values.canvas_Scale[2].start = values.blendHeight[2].end;\n                        values.canvas_Scale[2].end = values.canvas_Scale[2].start + 0.2;\n\n                        objs.canvas.style.transform = `scale(${calcValues(values.canvas_Scale, currentYOffset)})`;\n                        objs.canvas.style.marginTop = 0\n                    }\n\n                    if(scrollRatio > values.canvas_Scale[2].end && values.canvas_Scale[2].end > 0) {\n                        objs.canvas.classList.remove('sticky');\n                        //마지막 이미지가 다 전부 스케일 감소 된 이후 position 을 fixed 제거 한다.\n\n                        objs.canvas.style.marginTop = `${scrollHeight * 0.4}px`;\n\n                        values.canvasCaption_Opacity[2].start = values.canvas_Scale[2].end;\n                        values.canvasCaption_Opacity[2].end = values.canvasCaption_Opacity[2].start + 0.1;\n\n                        values.canvasCaption_TranslateY[2].start = values.canvas_Scale[2].end;\n                        values.canvasCaption_TranslateY[2].end = values.canvasCaption_Opacity[2].start + 0.1;\n\n                        objs.canvasCaption.style.opacity = calcValues(values.canvasCaption_Opacity, currentYOffset);\n                        objs.canvasCaption.style.transform = `translate3d(0, ${calcValues(values.canvasCaption_TranslateY, currentYOffset)}%, 0)`;\n                    }\n                }\n\n                \n                break;\n        }\n        //해당 신 인덱스 일때만 애니메이션을 실행 할 것 \n    }\n\n    function scrollLoop(){\n        enterNewScene = false;\n        prevScrollHeight = 0;\n\n        for(let i =0; i<currentScene; i++) {\n            prevScrollHeight += sceneInfo[i].scrollHeight;\n        }\n\n        if( delayedYOffset < prevScrollHeight + sceneInfo[currentScene].scrollHeight ) {\n            document.body.classList.remove('scroll-effect-end');\n        }\n\n        if( delayedYOffset > prevScrollHeight + sceneInfo[currentScene].scrollHeight ) {\n            enterNewScene = true;\n            \n            if(currentScene === sceneInfo.length-1) {\n                document.body.classList.add('scroll-effect-end');\n            }\n            \n            \n            if(currentScene < sceneInfo.length - 1){\n                currentScene++;\n            }\n            \n            document.body.setAttribute('id',`show-scene-${currentScene}`);\n        }\n\n        if( delayedYOffset < prevScrollHeight ) {\n            if(currentScene === 0) return; \n            //IE : currentScene could be \"-1\" => exception code\n            enterNewScene = true;\n            currentScene--;\n            document.body.setAttribute('id',`show-scene-${currentScene}`);\n        }\n\n        if(enterNewScene) return;\n        playAnimation();\n    }\n    \n    function loop(){\n        delayedYOffset = delayedYOffset + (yOffset - delayedYOffset) * acc;\n\n        if(!enterNewScene) {\n            if(currentScene === 0 || currentScene === 2) {\n                const currentYOffset = delayedYOffset - prevScrollHeight;\n                const values = sceneInfo[currentScene].values;\n                const objs = sceneInfo[currentScene].objs;\n                let sequence = Math.round(calcValues(values.imageSequence, currentYOffset));\n\n                if(objs.videoImages[sequence]) {\n                    objs.context.drawImage(objs.videoImages[sequence],0,0);\n                }\n            }\n        }\n\n            rafId = requestAnimationFrame(loop);\n    \n    \n            if(Math.abs(yOffset - delayedYOffset) < 1) {\n                cancelAnimationFrame(rafId);\n                rafState = false;\n            }\n    }\n\n\n    \n    window.addEventListener('load', ()=>{\n        document.body.classList.remove('before-load');\n        setLayout();\n        sceneInfo[0].objs.context.drawImage(sceneInfo[0].objs.videoImages[0],0,0);\n\n        let tempYOffset = yOffset;\n        let tempScrollCount = 0;\n        if(yOffset > 0) {\n            let siId = setInterval(() => {\n                window.scrollTo(0, tempYOffset);\n                tempYOffset += 5;           \n                if(tempScrollCount > 20) {\n                    clearInterval(siId);\n                }\n                tempScrollCount++;     \n            }, 20);    \n        }        \n\n        window.addEventListener('scroll', ()=>{\n            yOffset = window.pageYOffset;\n            scrollLoop();\n            checkMenu();\n            if(!rafState) {\n                rafId = requestAnimationFrame(loop);\n                rafState = true;\n            }\n        });\n\n        document.querySelector('.loading').addEventListener('transitionend', (e) =>{\n            document.body.removeChild(e.currentTarget);\n        })\n\n        window.addEventListener('resize', () => {\n            if(window.innerWidth > 900) {\n                // setLayout();\n                // sceneInfo[3].values.rectStartY = 0;\n                window.location.reload();\n            }\n            // target device screen : 900\n        });\n        window.addEventListener('orientationchange', ()=>{\n            scrollTo(0,0);\n            setTimeout(()=>{\n                window.location.reload();\n            }, 500);\n        });\n    });\n    \n    //핸드폰 가로본능\n\n\n    setCanvasImages();\n})();\n"},685:e=>{e.exports=function(e){function n(e){"undefined"!=typeof console&&(console.error||console.log)("[Script Loader]",e)}try{"undefined"!=typeof execScript&&"undefined"!=typeof attachEvent&&"undefined"==typeof addEventListener?execScript(e):"undefined"!=typeof eval?eval.call(null,e):n("EvalError: No eval function available")}catch(e){n(e)}}},379:e=>{"use strict";var n=[];function t(e){for(var t=-1,s=0;s<n.length;s++)if(n[s].identifier===e){t=s;break}return t}function s(e,s){for(var o={},r=[],c=0;c<e.length;c++){var i=e[c],l=s.base?i[0]+s.base:i[0],u=o[l]||0,d="".concat(l," ").concat(u);o[l]=u+1;var f=t(d),m={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==f)n[f].references++,n[f].updater(m);else{var g=a(m,s);s.byIndex=c,n.splice(c,0,{identifier:d,updater:g,references:1})}r.push(d)}return r}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var o=s(e=e||[],a=a||{});return function(e){e=e||[];for(var r=0;r<o.length;r++){var c=t(o[r]);n[c].references--}for(var i=s(e,a),l=0;l<o.length;l++){var u=t(o[l]);0===n[u].references&&(n[u].updater(),n.splice(u,1))}o=i}}},569:e=>{"use strict";var n={};e.exports=function(e,t){var s=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!s)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");s.appendChild(t)}},216:e=>{"use strict";e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{"use strict";e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{"use strict";e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var s="";t.supports&&(s+="@supports (".concat(t.supports,") {")),t.media&&(s+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(s+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),s+=t.css,a&&(s+="}"),t.media&&(s+="}"),t.supports&&(s+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(s+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(s,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{"use strict";e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},423:(e,n,t)=>{"use strict";e.exports=t.p+"5198553380d9bb727554.otf"},500:(e,n,t)=>{"use strict";e.exports=t.p+"abd0b03858195fb046f1.otf"},144:(e,n,t)=>{"use strict";e.exports=t.p+"be1201da9cdad251e533.ttf"}},n={};function t(s){var a=n[s];if(void 0!==a)return a.exports;var o=n[s]={id:s,exports:{}};return e[s](o,o.exports,t),o.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var s in n)t.o(n,s)&&!t.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:n[s]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var s=n.getElementsByTagName("script");s.length&&(e=s[s.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0,t(685)(t(957)),(()=>{"use strict";var e=t(379),n=t.n(e),s=t(795),a=t.n(s),o=t(569),r=t.n(o),c=t(565),i=t.n(c),l=t(216),u=t.n(l),d=t(589),f=t.n(d),m=t(556),g={};g.styleTagTransform=f(),g.setAttributes=i(),g.insert=r().bind(null,"head"),g.domAPI=a(),g.insertStyleElement=u(),n()(m.Z,g),m.Z&&m.Z.locals&&m.Z.locals})()})();